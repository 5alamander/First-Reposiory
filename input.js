// Generated by CoffeeScript 1.8.0
(function() {
  var i, isInteger, selectLocation, selectPlayer, selectServant, sendInstruction, stdin, _i,
    __slice = [].slice;

  stdin = process.openStdin();

  stdin.setEncoding('utf8');

  isInteger = function(num) {
    return num === Math.round(num);
  };

  stdin.on('data', function(input) {
    var halves, index, nums, t, _i, _len;
    halves = input.split(',');
    nums = (function() {
      var _i, _len, _results;
      _results = [];
      for (_i = 0, _len = halves.length; _i < _len; _i++) {
        t = halves[_i];
        _results.push(parseInt(t));
      }
      return _results;
    })();
    console.log('your input is : ' + nums);
    if (nums.length < 4) {
      console.log('need more arguments');
      return;
    }
    for (_i = 0, _len = nums.length; _i < _len; _i++) {
      index = nums[_i];
      if (!isInteger(index)) {
        console.log('plaese input numbers');
        return;
      }
    }
    console.log('check passed, send instruction to gs\n');
    return sendInstruction.apply(null, nums);
  });

  sendInstruction = function(player, source, aim, selection, location) {
    if (selection == null) {
      selection = 0;
    }
    if (location == null) {
      location = 0;
    }
    return console.log(player + ' ' + source + ' ' + aim + ' ' + selection);
  };

  selectPlayer = function(gs, n) {
    if (n = 0) {
      return gs.attacker;
    } else {
      return gs.defenser;
    }
  };

  selectServant = function(player, n) {
    var tarray;
    return tarray = __slice.call(player.heroList).concat([player.servantList]);
  };

  selectLocation = function(player, n) {
    var tarray;
    return tarray = player.servantList;
  };

  for (i = _i = 1; _i <= 10; i = ++_i) {
    if (typeof a !== "undefined" && a !== null) {
      console.log('aaa');
    } else {
      console.log('bbb');
    }
  }

}).call(this);
