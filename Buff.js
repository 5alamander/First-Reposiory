// Generated by CoffeeScript 1.8.0
(function() {
  var EventEmitter, a, b, c, d, f1, f2, key, t, trigger,
    __slice = [].slice;

  EventEmitter = require('events').EventEmitter;

  trigger = new EventEmitter();

  f1 = function() {
    return console.log('f1');
  };

  f2 = function() {
    return console.log('f2');
  };

  trigger.on('die', function() {
    return console.log('sysout die');
  }).on('die', function() {
    var n;
    n = 1 <= arguments.length ? __slice.call(arguments, 0) : [];
    console.log('die ' + n[1]);
    return console.log('die ' + n[0]);
  }).once('die', function() {
    return console.log('only once');
  }).on('f', f1).on('f', f2).on('f', f2).on('f', f2).on('f', f2).on('f1', f2).on('f1', f2).on('f1', f2).on('f1', f2).on('f1', f2).on('f1', f2);

  trigger.emit('die', 1, 3);

  trigger.emit('die', 1, 3);

  trigger.emit('f');

  trigger.removeListener('f', f2);

  trigger.emit('f');

  a = {
    name: 'wo shi a',
    skill: function() {
      return console.log(this.name);
    },
    skill2: function() {
      return console.log(this.nickName);
    }
  };

  b = {
    nickName: 'wo shi b',
    nickName2: 'wo shi b 2'
  };

  a.skill();

  a.skill2();

  console.log(b);

  console.log({
    a: 1,
    b: 2,
    c: 3,
    d: 'asdf',
    e: 'asdf'
  });

  c = (function() {
    c.prototype.name = 'card';

    function c(initial) {
      var key, value;
      this.tags = [];
      for (key in initial) {
        value = initial[key];
        if (key.indexOf('when') === 0) {
          this.tags.push(key);
        }
        this[key] = value;
      }
    }

    c.prototype.fu = function() {
      return console.log('function is nopro');
    };

    return c;

  })();

  t = new c({
    whenA: 'a',
    whenB: 'c'
  });

  t = new c({
    printName: function() {
      return console.log(this.name);
    },
    tName: 't name',
    whenUse: 't',
    whenAttack: 'd',
    fu: function() {
      return console.log('kill the onwer');
    }
  });

  console.log(t);

  t.printName();

  t.fu();

  console.log(t.tags);

  d = (function() {
    d.name = 'd';

    function d() {}

    return d;

  })();

  console.log(new d());

  key = 'awhen';

  console.log(key.indexOf('when'));

  a = function(i1, i2, initial, t) {
    if (t == null) {
      t = 1;
    }
    console.log(t);
    return console.log(initial);
  };

  a(1, 2, {
    a: 1,
    b: 3
  }, 4);

  d = function() {
    console.log('aa');
    return console.log('bb');
  };

  if (!false) {
    d();
  }

  eval("console.log('asdf') ");

}).call(this);